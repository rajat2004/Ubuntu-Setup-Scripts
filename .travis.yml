language: python
python: 3.7
os: linux

jobs:
  allow_failures:
    - name: bionic-ml
      dist: bionic

    - name: focal-ml
      dist: focal

  include:
    - name: bionic-basic
      dist: bionic
      env: CIINSTALL=yes SCRIPT=12 # BasicSetup + GenSoftware

    - name: bionic-opencv
      dist: bionic
      env: CIINSTALL=yes SCRIPT=4 # Build-OpenCV

    - name: bionic-ml
      dist: bionic
      env: CIINSTALL=yes SCRIPT=5 # BuildML

    - name: bionic-ml-basic
      dist: bionic
      env: CIINSTALL=yes SCRIPT=3 # ML-Basic

    - name: bionic-opencv-conda
      dist: bionic
      env: CIINSTALL=yes SCRIPT=14 # BasicSetup + OpenCV (Conda OpenCV)

    - name: focal-basic
      dist: focal
      env: CIINSTALL=yes SCRIPT=12 # BasicSetup + GenSoftware

    - name: focal-opencv
      dist: focal
      env: CIINSTALL=yes SCRIPT=4 # Build-OpenCV

    - name: focal-ml
      dist: focal
      env: CIINSTALL=yes SCRIPT=5 # BuildML

    - name: focal-ml-basic
      dist: focal
      env: CIINSTALL=yes SCRIPT=3 # ML-Basic

    - name: focal-opencv-conda
      dist: focal
      env: CIINSTALL=yes SCRIPT=14 # BasicSetup + OpenCV (Conda OpenCV)

script:
  # BasicSetup + GenSoftware
  - if [[ $SCRIPT -eq 12 ]]; then
      ./1-BasicSetUp.sh;
      export PATH=/opt/anaconda3/bin:$PATH;
      hash -r;
      ./2-GenSoftware.sh;
    fi

  # ML-Basic
  - if [[ $SCRIPT -eq 3 ]]; then
      ./3-ML-Basic.sh;
    fi

  # Build-OpenCV
  - if [[ $SCRIPT -eq 4 ]]; then
      ./Build-OpenCV.sh;
      ffmpeg -version;
      python3 extras/opencv_test.py;
    fi

  # BasicSetup + OpenCV (Conda OpenCV)
  - if [[ $SCRIPT -eq 14 ]]; then
      ./1-BasicSetUp.sh;
      export PATH=/opt/anaconda3/bin:$PATH;
      hash -r;
      ./Build-OpenCV.sh;
      ffmpeg -version;
      python extras/opencv_test.py;
    fi

  # BuildML
  - if [[ $SCRIPT -eq 5 ]]; then
      ./Build-ML.sh;
    fi

before_install:
    - sudo add-apt-repository "deb http://archive.ubuntu.com/ubuntu $(lsb_release -sc) main universe restricted multiverse"
    - sudo apt-get update -qq
    - sudo apt-get install -y software-properties-common
    - sudo apt-get install -qq build-essential curl g++ python3-dev python3-setuptools gdb
    - echo 'America/Los_Angeles' | sudo tee /etc/timezone
    - sudo dpkg-reconfigure --frontend noninteractive tzdata
